#!/usr/bin/python2.4
# -*- coding: iso-8859-2 -*-
# $Id$
# Script:eSeMeS
# Copyright by skrobul@batnet.pl 2005
# Credits: sinx
# License: BSD license

#-------------------------------------------------------------------------------------------


from plus import PlusSMS
from orange import OrangeSMS


def rozpoznaj(numer):
	try:
		bramka = { 
			'600' : 'Era', '602' : 'Era', '604' : 'Era', '606' : 'Era', '608' : 'Era',
			'692' : 'Era', '694' : 'Era', '696' : 'Era', '698' : 'Era', '660' : 'Era',
			'888' : 'Era', '889' : 'Era',
			'601' : 'Plus', '603' : 'Plus', '605' : 'Plus', '607' : 'Plus', '691' : 'Plus', '693' : 'Plus',
			'695' : 'Plus', '697' : 'Plus', '609' : 'Plus', '661' : 'Plus', '663' : 'Plus', '887' : 'Plus',
			'500' : 'Orange', '501' : 'Orange', '502' : 'Orange', '503' : 'Orange', '503' : 'Orange'
		}[numer[0:3]]
	except KeyError:
		bramka = ''
		raise Exception, 'Podales bledny numer, lub numer nie jest rozpoznawany'
	
	return bramka

#-------------------------------------------------------------------------------------------
def usage():
		print 'Sposób u¿ycia:', sys.argv[0], '[opcje] <numer> <wiadomo¶æ>'
		print '\t-q, --quiet\tbez komunikatów'
		print '\t-h, --help\tpomoc(to co w³a¶nie czytasz)'
#-------------------------------------------------------------------------------------------
def badkonfig(bramka):
	print 'Brak konfiguracji bramki ' + bramka + ' w pliku konfiguracyjnym.'
	print 'Szczegoly konfiguracji znajdziesz w pliku README.smsrc'
	print 'Popraw to i sproboj ponownie...'
#-------------------------------------------------------------------------------------------

if __name__ == "__main__":
	import sys,getopt,os,ConfigParser

	try:
		opts, args = getopt.getopt(sys.argv[1:], "h:v", ["help", "verbose"])
	except GetoptError:
		usage()

	debug = False
	for o,a in opts:
		if o in ('-v', '--verbose'):
			debug = True
		if o in ('-h', '--help'):
			usage()
			sys.exit(-1)


	if len(args) < 2: #czy podano numer i tresc
		usage()
		sys.exit(-1)
	
	numer = args[0]
	tresc = ' '.join(args[1:])

	#Wstepne rozpoznawianie numeru
	if numer.isdigit() == False or len(numer) != 9:
		print 'Z³y numer'
		sys.exit(-1)
			

	try:
		bramka = rozpoznaj(numer)
	except:
		print "Blad rozpoznawania bramki"
		sys.exit(1)

	config = ConfigParser.RawConfigParser()
	config.read([os.path.expanduser('~/.smsrc'), '/etc/smsrc'])

	
	if bramka == "Orange":
		sms = OrangeSMS()
		try:
			sms.login = config.get('orange', 'login')
			sms.password = config.get('orange', 'password')
			if config.has_option('orange', 'podpis'):
				sms.sender = config.get('orange', 'podpis')
			else:
				sms.sender = ''
		except Exception:
			badkonfig('Orange')
			sys.exit(-2)

	elif bramka == "Plus":
		sms = PlusSMS()
		try:
			sms.login = config.get('plus', 'login')
			sms.password = config.get('plus', 'password')
		except Exception:
			badkonfig('Plus')
			sys.exit(-2)
	
	elif bramka == "Era":
		print 'Bramka jest jeszcze nie supportowana'
		sys.exit(-2)

	sms.number = numer
	sms.message = tresc
	sms.debug = debug

	if debug:	
		print 'Wysylam pod %s %s' % (numer, tresc)
	sms.sendsms()

# vim: ts=2
